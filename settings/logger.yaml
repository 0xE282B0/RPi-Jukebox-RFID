version: 1
formatters:
  color:
    format: '{asctime} - {lineno:4}:{filename:20} - {name} - {threadName:10} - {levelnameColored:8} - {lightcyan}{message}{reset}'
    datefmt: '%d.%m.%Y %H:%M:%S'
    style: '{'
  base:
    format: '{asctime} - {lineno:4}:{filename:20} - {name} - {threadName:10} - {levelname:8} - {message}'
    datefmt: '%d.%m.%Y %H:%M:%S'
    style: '{'
handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: color
    stream: ext://sys.stdout
    filters: [colorize]
  debug_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: base
    filename: ../../logs/app.log
    maxBytes: 20971520 # 2 MB
    backupCount: 2
    encoding: utf8
    mode: w
  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: base
    filename: ../../logs/errors.log
    maxBytes: 10485760 # 1 MB
    backupCount: 2
    encoding: utf8
    mode: w
filters:
  colorize:
    # This filter adds all colors from simplecolors by using %(colorname)c or {colorname} in formatter string
    # It also adds the keyword {levelnameColored} which auto-colores the levelname depending on severity
#    "()": __main__.ColorFilter
    "()": misc.loggingext.ColorFilter
    enable: True
    color_levelname: True
loggers:
  jb:
    level: DEBUG
    handlers: [console, debug_file_handler, error_file_handler]
    propagate: no
  top.subfile:
    level: WARNING
root:
  level: DEBUG
#  handlers: [console]
